generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model articles {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  v             Int    @map("__v")
  abstract      String
  article_image String
  article_label String @db.ObjectId
  article_type  String @db.ObjectId
  content       String
  createdAt     String
  title         String
  updatedAt     String
  user          String @db.ObjectId
}

model articletags {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  v           Int      @map("__v")
  articles    String[] @db.ObjectId
  createdAt   DateTime @db.Date
  description String
  label       String
  updatedAt   DateTime @db.Date
}

model articletypes {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  v           Int      @map("__v")
  articles    String[] @db.ObjectId
  createdAt   DateTime @db.Date
  description String
  label       String
  updatedAt   DateTime @db.Date
}

model menus {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  v           Int      @map("__v")
  createdAt   String
  icon        String
  name        String
  parentId    Int
  path        String
  permissions String[]
  updatedAt   String
}

model messageboards {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  v         Int    @map("__v")
  content   String
  createdAt String
  updatedAt String
  user      String @db.ObjectId
}

model rolebemenus {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  v         Int      @map("__v")
  createdAt String
  menus     String[] @db.ObjectId
  role      String   @db.ObjectId
  updatedAt String
}

model roles {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  v           Int     @map("__v")
  createdAt   String
  description String
  name        String
  updatedAt   String
  user        String? @db.ObjectId
}

model tracks {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  v         Int    @map("__v")
  /// Could not determine type: the field only had null or empty values in the sample set.
  article   Json?
  createdAt String
  form_page String
  ip        String
  ip_count  Int
  to_page   String
  updatedAt String
  /// Could not determine type: the field only had null or empty values in the sample set.
  user      Json?
}

model users {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  v          Int?     @map("__v")
  articles   String[] @db.ObjectId
  createdAt  String?
  email      String?  @unique(map: "email_1")
  /// Could not determine type: the field only had null or empty values in the sample set.
  likes      Json?
  password   String?
  profilePic String?
  role       String?  @db.ObjectId
  updatedAt  String?
  username   String?  @unique(map: "username_1")
}
